/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-04-18 02:48:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.MY.my;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import my.user.inquiry.inquiryDao;
import my.user.ticket.ticketDao;
import my.user.userDao;

public final class my_005fdelete_005fProc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("my.user.ticket.ticketDao");
    _jspx_imports_classes.add("my.user.userDao");
    _jspx_imports_classes.add("my.user.inquiry.inquiryDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

	request.setCharacterEncoding("UTF-8");
	String sid = (String)session.getAttribute("sid");
	String input_password = request.getParameter("password");
	
	userDao udao = userDao.getInstance();
	ticketDao tdao = ticketDao.getInstance();
	inquiryDao idao = inquiryDao.getInstance();
	String db_password = udao.getPwById(sid); 
	
	String message = null, url = null;
	if(db_password.equals(input_password)){ // 아이디와 일치하는 비밀번호와 입력한 비밀번호가 같다면
		int cnt_user = udao.deleteUser(sid); // 로그인 되어 있는 아이디와 일치하는 사용자 삭제
		if(cnt_user == 1){
			message = "회원 탈퇴되었습니다.";
			url = request.getContextPath() + "/MY/Home/home.jsp";
			
			//회원 탈퇴시 탈퇴하는 아이디에 해당하는 티켓 다 삭제
			int cnt_ticket = tdao.deleteTicketByTid(sid); 
			if(cnt_ticket != -1){
				System.out.println("예매한 티켓이 취소되었습니다.");
			}
			
			//회원 탈퇴시 탈퇴하는 아이디에 해당하는 문의 내역을 변경
			int cnt_inquiry = idao.updateInquiryByIid(sid); 
			if(cnt_inquiry != -1){
				System.out.println("문의 내역이 변경되었습니다.");
			}
			
			//로그인 되어 있는 아이디를 탈퇴 --> 자동 로그아웃
			session.invalidate();
		}
		else{
			message = "회원 탈퇴 실패";
			url = request.getContextPath() + "/MY/Home/home.jsp";
		}
	}
	else{
		message = "비밀번호가 일치하지 않습니다.";
		url = request.getContextPath() + "/MY/my/my_delete.jsp";
	}

      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	alert(\"");
      out.print( message );
      out.write(" \"); \n");
      out.write("	location.href= '");
      out.print( url );
      out.write("'; \n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
